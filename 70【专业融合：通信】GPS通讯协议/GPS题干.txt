NMEA-0183是一种组合电气和数据规范 (https://en.wikipedia.org/wiki/NMEA_0183)，
用于海洋电子设备 (例如回声测深仪、声纳、风速计、陀螺罗盘、自动驾驶仪、GPS 接收器和许多其他类型的仪器)之间的通信。
GPS接收机根据NMEA-0183协议的标准规范，将位置、速度等信息通过串口传送到PC机、PDA等设备。
NMEA-0183协议定义的语句非常多，但是常用的只有GPGGA、GPGSA、GPGSV、GPRMC、GPVTG、GPGLL等。
其中GPRMC语句的格式如下，GPRMC,024813.640,A,3158.4608,N,11848.3737,E,10.05,324.27,150706,A*50整条语句是一个文本行，行中以逗号隔开各个字段，每个字段的大小(长度)不一
(1)字段0:GPRMC，语句ID，表明该语为RecommendedMinimumSpecificGPS/TRANSITData，含义是推荐最小定位信息。
(2)字段1：UTC时间,hhmmss.sss格式
(3)字段2: 状态，A=定位，V=未定位
(4)字段3，纬度ddmm.mmmm，度分格式(前导位数不足则补0)
(5)字段4：纬度N（北纬）或S（南纬）
(6)字段5：经度dddmm.mmmm，度分格式（前导位数不足则补0）
(7)字段6：经度E（东经）或W（西经）
(8)字段7：速度，节,Knots
(9)字段8：方位角，度
(10)字段9：UTC日期，DDMMYY格式
(11)字段10：磁偏角，（000-180）度（前导位数不足则补0）
(12)字段11：磁偏角方向，E=东W=西（13）
(13)字段16：校验值这里，"*"为校验识别符，其后面两位数为校验和，代表"$"和"*"之间所有字符(不包括这两个字符)的异或值的十六进制值，如上面这条例句的校验和是十六进制的50。
C语言^运算符的作用是异或。
将和*之间所有的字符做运算（第一个字符和第二个字符异或，结果再和第三个字符异或，依此类推）之后的值对65536取余后的结果，
应该和*后面的两个十六进制数字的值相等，否则的话说明这条语句在传输中发生了错误。注意这个十六进制值字母是大写的。
程序的功能是读入一系列的GPS语句，其中包合GPRMC，也包含其他语句，最后一行总是END。
程序仅处理GPRMC语句，计算校验和，找出校验正确的语句，提取字段2的UTC时间，换算成北京时间 (+8小时)输出，小数点忽略。如果是校验错误的语句，输出erTor。如果不是GPRMC语句，什么也不做。

Input
输入若干行GPS语句字符串，直到"END"为止。
Output
依据前述要求输出相应结果。样例解释如下
第1行，GPRMC语句，从"$"到"*"之间的异或值十六进制为50，与末尾校验值相等，为有效的GPRMC语句。UTC时间为"02小时48分13.640秒"，换算成北京时间为10:48:13(输出结果)
第2行，不是GPRMC语句，什么也不做。
第3行，GPRMC语句，从"$"到"*"之间的异或值十六进制为53，与末尾校验值不相等，输出error
第4行，不是GPRMC语句，什么也不做。
第5行，GPRMC语句，从"$"到"*"之间的异或值十六进制为48，与末尾校验值相等，为有效的GPRMC语句。UTC时间为“11小时17分24.681秒”，换算成北京时间为19:17:24 (输出结果)
第6行，不是GPRMC语句，什么也不做。
第7行，END，结束。
Sample Input
$GPRMC,024813.640,A,3158.4608,N,11848.3737,E,10.05,324.27,150706,,,A*50
$GPGSV,3,1,11,10,63,137,17,07,61,098,15,05,59,290,20,08,54,157,30*70
$GPRMC,194548.127,A,5230.657,N,01325.713,E,3968.7,122.8,200220,000.0,W*44
$GPGGA,092750.000,5321.6802,N,00630.3372,w,1,8,1.03,61.7,M,55.2,M,,*76
$GPRMC,111724.681,A,5231.801,N,01329.267,E,1289.3,000.0,291123,000.0,W*48
$GNVTG,112.99,T,109.99,M,0.15,N,0.08,K,A*3B
END

Sample Output
10:48:13
error
19:17:24
